# Firewall Rules.
#
# These will be applied verbatim for both IPv4 and IPv6.
# As usual, first match decides what happens.
#
# Implicit rules:
# * outbound traffic is always allowed
# * traffic related to already-established sessions is always allowed(*)
# * for inbound traffic, everything not explicitly allowed here is rejected
# * ICMP(6) is always allowed, _unless_ it matches an explicit reject or drop rule.
#
# (*) be advised this can cause funny situations where you accidentally block SSH, but your
#     current session keeps working because it's already established, so you don't _notice_
#     right away that you blocked SSH. Once you close that session and try to establish a
#     _new_ one though, you'll experience a surprise. So if you're building a new firewall,
#     be sure to test that you can open new SSH sessions BEFORE you close the old ones.
#
# Valid actions:
# * accept+nat: Traffic is permitted and masqueraded
# * accept:     Traffic is permitted
# * reject:     Traffic is blocked, sender gets an error message
# * drop:       Traffic is blocked, sender gets a timeout
#
# Zones are the ones you defined in the `interfaces` file, plus FW if you want to target
# the Firewall itself (e.g. to accept SSH connections to it).
#
# Src-Address and Dst-Address columns MUST refer to entries in the `addresses` file, or ALL.
# The Service column MUST refer to entries in the `services` file, or ALL.
#
#
# Src-Zone      Dest-Zone        Src-Address          Dst-Address            Service        Action

ext             FW               ALL                  ALL                    ssh            accept
ext             ALL              ALL                  ALL                    ALL            reject

int             FW               ALL                  ALL                    ALL            reject
int             int              ALL                  ALL                    ALL            accept
int             ext              lan_home             google                 http           accept+nat
int             ext              lan_home             google                 https          accept+nat
int             ext              ALL                  ALL                    ALL            reject
